import { eg } from '@cloudflare/util-en-garde';
export var PageRuleMinifyValue = eg.object({
  html: eg.union([eg.literal('on'), eg.literal('off')]).optional,
  css: eg.union([eg.literal('on'), eg.literal('off')]).optional,
  js: eg.union([eg.literal('on'), eg.literal('off')]).optional
});
export var PageRuleForwardingUrlValue = eg.object({
  status_code: eg.number,
  url: eg.string
});
var PageRuleCacheKeyFieldsValue = eg.object({
  query_string: eg.union([eg.object({
    include: eg.literal('*'),
    exclude: eg.emptyArray
  }), eg.object({
    include: eg.emptyArray,
    exclude: eg.literal('*')
  }), eg.object({
    include: eg.array(eg.string),
    exclude: eg.array(eg.string)
  })]),
  header: eg.object({
    include: eg.array(eg.string),
    exclude: eg.array(eg.literal('origin')),
    check_presence: eg.array(eg.string)
  }),
  cookie: eg.object({
    include: eg.array(eg.string),
    check_presence: eg.array(eg.string)
  }),
  host: eg.object({
    resolved: eg.boolean
  }),
  user: eg.object({
    device_type: eg.boolean,
    geo: eg.boolean,
    lang: eg.boolean
  })
});
export var PageRuleValue = eg.union([eg.literal('on'), eg.literal('off'), eg.string, eg.number, PageRuleMinifyValue, PageRuleForwardingUrlValue, PageRuleCacheKeyFieldsValue]);
export var PageRuleAction = eg.object({
  id: eg.string,
  value: PageRuleValue.optional
});
export var PageRulesConstraint = eg.object({
  operator: eg.literal('matches'),
  value: eg.string.optional
});
export var PageRuleTarget = eg.object({
  target: eg.literal('url'),
  constraint: PageRulesConstraint
});
export var PageRule = eg.object({
  id: eg.string,
  priority: eg.number,
  status: eg.union([eg.literal('active'), eg.literal('disabled')]),
  actions: eg.array(PageRuleAction),
  targets: eg.array(PageRuleTarget),
  created_on: eg.string.optional,
  modified_on: eg.string.optional
});
export var PageRulesSettingToggle = eg.object({
  name: eg.literal('value'),
  type: eg.literal('toggle')
});
export var PageRulesSettingRange = eg.object({
  name: eg.literal('value'),
  type: eg.literal('range'),
  min: eg.number,
  max: eg.number,
  suggested_values: eg.array(eg.number)
});
export var PageRulesSettingSelect = eg.object({
  name: eg.literal('value'),
  type: eg.union([eg.literal('choice'), eg.literal('select')]),
  multiple: eg.boolean,
  allowEmpty: eg.boolean.optional,
  choices: eg.array(eg.string)
});
export var PageRulesSettingString = eg.object({
  name: eg.literal('value'),
  type: eg.literal('string'),
  readonly: eg.boolean
});
export var PageRulesSettingCheckboxes = eg.object({
  name: eg.literal('value'),
  type: eg.union([eg.literal('choice'), eg.literal('select')]),
  multiple: eg.boolean,
  allowEmpty: eg.boolean.optional,
  choices: eg.array(eg.string)
});
export var PageRulesSettingStatusCode = eg.object({
  name: eg.literal('status_code'),
  type: eg.literal('choice'),
  multiple: eg.boolean,
  choices: eg.array(eg.number)
});
export var PageRulesSettingForwardingUrl = eg.object({
  name: eg.literal('url'),
  type: eg.literal('forwardingUrl')
});
export var PageRuleProperty = eg.union([PageRulesSettingToggle, PageRulesSettingRange, PageRulesSettingStatusCode, PageRulesSettingString, PageRulesSettingForwardingUrl, PageRulesSettingSelect, PageRulesSettingCheckboxes]);
export var PageRulesSetting = eg.object({
  id: eg.string,
  properties: eg.array(PageRuleProperty),
  readonly: eg.boolean.optional
});
export var PageRulesQuota = eg.object({
  quota: eg.number
});
export var SnippetRuleProps = eg.object({
  snippet_name: eg.string,
  expression: eg.string,
  description: eg.string,
  enabled: eg.boolean
});
export var SnippetTypeProps = eg.object({
  id: eg.string,
  snippet_name: eg.string,
  created_on: eg.string.optional,
  modified_on: eg.string.optional,
  script: eg.string.optional,
  rules: eg.array(SnippetRuleProps)
});