import { eg } from '@cloudflare/util-en-garde';
export var ZoneLevelAccessPolicyScope = eg.object({
  accountId: eg.string.optional,
  effect: eg.string,
  mode: eg.string,
  zoneId: eg.string.optional,
  resourceGroupId: eg.string.optional
});
export var ZoneLevelAccessPolicy = eg.object({
  id: eg.string,
  access: eg.boolean,
  owner: eg.string,
  emails: eg.array(eg.string).optional,
  auto_accept: eg.boolean.optional,
  resource_groups: eg.array(eg.string).optional,
  permission_groups: eg.array(eg.string),
  scopes: eg.array(ZoneLevelAccessPolicyScope)
});
export var MembershipsPermission = eg.object({
  id: eg.string,
  key: eg.string,
  implies: eg.array(eg.object({
    id: eg.string,
    key: eg.string
  })).optional
});
export var PolicyPermissionGroup = eg.object({
  id: eg.string,
  name: eg.string,
  meta: eg.object({
    description: eg.string,
    editable: eg.boolean,
    label: eg.string,
    scopes: eg.string
  }),
  permissions: eg.array(MembershipsPermission).optional
});
var MembershipsScope = eg.object({
  key: eg.string,
  objects: eg.array(eg.object({
    key: eg.string
  })).optional
});
export var MembershipsNestedScope = eg.object({
  key: eg.string,
  objects: eg.array(eg.object({
    key: eg.string
  })),
  subset_of: eg.array(MembershipsScope).optional
});
export var PolicyResourceGroup = eg.object({
  id: eg.string,
  meta: eg.object({
    editable: eg.string
  }),
  name: eg.string,
  scope: MembershipsNestedScope
});
export var MembershipsPolicy = eg.object({
  id: eg.string,
  access: eg.string,
  permission_groups: eg.array(PolicyPermissionGroup),
  resource_groups: eg.array(PolicyResourceGroup)
});