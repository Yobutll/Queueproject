import { TypeFromCodec } from '@cloudflare/util-en-garde';
declare const HTTPApplication: import("@cloudflare/util-en-garde").ObjectCodec<{
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    status: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    current_version: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    last_updated: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export type HTTPApplication = TypeFromCodec<typeof HTTPApplication>;
declare const ZoneApplication: import("@cloudflare/util-en-garde").ObjectCodec<{
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    name: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    status: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    current_version: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    last_updated: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export type ZoneApplication = TypeFromCodec<typeof ZoneApplication>;
declare const ZoneVersion: import("@cloudflare/util-en-garde").ObjectCodec<{
    version: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    zone_tag: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    zone_name: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    cloned_from: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
    application_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    description: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    status: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    locked: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
    last_updated: import("@cloudflare/util-en-garde").Codec<import("io-ts").UnionC<[import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>, import("io-ts").UndefinedC]>>;
}>;
export type ZoneVersion = TypeFromCodec<typeof ZoneVersion>;
declare const ZoneVersionCompare: import("@cloudflare/util-en-garde").ObjectCodec<{
    first_version: import("@cloudflare/util-en-garde").ObjectCodec<{
        file_data: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        metadata: import("@cloudflare/util-en-garde").ObjectCodec<{
            created_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            status: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        }>;
    }>;
    second_version: import("@cloudflare/util-en-garde").ObjectCodec<{
        file_data: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        metadata: import("@cloudflare/util-en-garde").ObjectCodec<{
            created_on: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
            status: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
        }>;
    }>;
}>;
export type ZoneVersionCompare = TypeFromCodec<typeof ZoneVersionCompare>;
declare const CreateZoneVersionCompare: import("@cloudflare/util-en-garde").ObjectCodec<{
    first_version: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    second_version: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export type CreateZoneVersionCompare = TypeFromCodec<typeof CreateZoneVersionCompare>;
declare const CreateZoneVersion: import("@cloudflare/util-en-garde").ObjectCodec<{
    version: import("@cloudflare/util-en-garde").Codec<import("io-ts").NumberC>;
    id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    clone_from: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    application_id: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    description: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    status: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    locked: import("@cloudflare/util-en-garde").Codec<import("io-ts").BooleanC>;
    last_updated: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export type CreateZoneVersion = TypeFromCodec<typeof CreateZoneVersion>;
declare const WAFMigrationStatus: import("@cloudflare/util-en-garde").ObjectCodec<{
    new_waf_status: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
    old_waf_status: import("@cloudflare/util-en-garde").Codec<import("io-ts").StringC>;
}>;
export type WAFMigrationStatus = TypeFromCodec<typeof WAFMigrationStatus>;
export {};
